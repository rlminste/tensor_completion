%% Poblano Toolbox for MATLAB: Checking Gradient Calculations
% Analytic gradients can be checked using finite difference approximations.
% The Poblano function |gradientcheck| computes the gradient approximations
% and compares the results to the analytic gradient using a user-supplied
% objective function/gradient M-file. The user can choose one of several
% difference formulas as well as the difference step used in the
% computations.
%%
%
% <html><hr></html>
%% Difference Formulas
% The difference formulas for approximating the gradients in Poblano are
% listed below. For more details on the different formulas, see [1].
%
% _Forward Differences_
%
% $$\frac{\partial f}{\partial x_i}(x) \approx \frac{f(x+he_i)-f(x)}{h}$$
%
% _Backward Differences_
%
% $$\frac{\partial f}{\partial x_i}(x) \approx \frac{f(x)-f(x-he_i)}{h}$$
%
% _Centered Differences_
%
% $$\frac{\partial f}{\partial x_i}(x) \approx \frac{f(x+he_i)-f(x-he_i)}{2h}$$
%
% Note that $e_i$ is a vector the same size as $x$ with a 1 in element $i$
% and zeros elsewhere. The type of finite differences to use is specified
% using the |DifferenceType| input parameter, and the value of $h$ is
% specified using the |DifferenceStep| input parameter.
%
% For a detailed discussion on the impact of the choice of $h$ on the
% quality of the approximation, see [2].
%
%%
%
% <html><hr></html>
%% Gradient Check Input Parameters
%
% The input parameters available for the |gradientcheck| function
% are presented below.
% 
%  DifferenceType     Difference formula to use {'forward'}
%       'forward'     g_i = (f(x+he_i)-f(x)) / h
%       'backward'    g_i = (f(x)-f(x-he_i)) / h
%       'centered'    g_i = (f(x+he_i)-f(x-he_i)) / (2h)
%
%  DifferenceStep     Value of h in difference formulae {1e-8}
%%
%
% <html><hr></html>
%% Gradient Check Output Parameters
%
% The fields in the structure of output parameters generated by the
% |gradientcheck| function are presented below.
%
%  G                  Analytic gradient
%
%  GFD                FD approximation of gradient
%
%  MaxDiff            Maximum difference between G and GFD
%
%  MaxDiffInd         Index of maximum difference between G and GFD
%
%  NormGradientDiffs  2-norm of G - GFD
%
%  GradientDiffs      G - GFD
%
%  Params             Parameters used to compute FD approximations
%%
%
% <html><hr></html>
%% Examples
%%
% We use |example1| (described in detail in the
% <A4_poblano_pexamples_docs.html Poblano Examples> section) to illustrate
% how to use the |gradientcheck| function to check user-supplied
% gradients. The user provides a function handle to the M-file containing
% their function and gradient computations, a point at which to check the
% gradients, and the type of difference formula to use. Below is an example
% of running the gradient check using each of the difference formulas.
%%
outFD = gradientcheck(@(x) example1(x,3), pi./[4 5 6]','DifferenceType','forward')
outBD = gradientcheck(@(x) example1(x,3), pi./[4 5 6]','DifferenceType','backward')
outCD = gradientcheck(@(x) example1(x,3), pi./[4 5 6]','DifferenceType','centered')
%%
%
% Note the different gradients produced using the various differencing
% formulas:
format long
[outFD.G outFD.GFD outBD.GFD outCD.GFD]
format short
%% References
%
% [1] Nocedal, J. and Wright S. J. (1999). 
% _Numerical Optimization_. Springer.
%
% [2] Overton, M. L. (2001). 
% _Numerical Computing with IEEE Floating Point Arithmetic_.
% Society for Industrial and Applied Mathematics.
